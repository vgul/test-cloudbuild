{

  "variables": {
    "USER_NAME":         "build",
    "PURPOSE_LABEL":     "win-spec-test",

    "BUCKET_NAME":       "smurthy_cbcd_installers",
    "FOLDER_NAME":       "packer-20201230",

    "NIMBUS_REPO":       "git@github.com:electric-cloud/nimbus.git",

    "SUBNETWORK":        "projects/ops-shared-vpc/regions/us-west2/subnetworks/testing-cloud-cd-us-west2",
    "GCP_PROJECT":       "flow-testing-project",
    "ZONE":              "us-west2-a",
    "MACHINE_TYPE":      "e2-standard-16",
    "NET_TAGS":          "cd-artemis-us-west2",
    "DISK_SIZE":         "50",
    "IMAGE_FAMILY":      "windows-2012-r2",
    "PREEMPTIBILITY":    "true",
    "CACHE_FOLDER":      "C:\\Cache",
    "FILESTORE":         "10.30.228.2:/chronic3build",
    "NETWORK_DISK":      "N:",
    "LOCAL_TMP_CACHE":   "tmp-cache-result",

    "GIT_SSH_KEY":       "",

    "USE_SSL":           "true",
    "DEBUG_INIT_SCRIPT2": "& winrm set winrm/config/service @{AllowUnencrypted=\"true\"} & netsh advfirewall firewall add rule name=\"Open Port 5985\" dir=in action=allow protocol=TCP localport=5985",
    "DEBUG_INIT_SCRIPT": ""
  },


  "builders": [
    {
      "type":                 "googlecompute",
      "communicator":         "winrm",

      "machine_type":         "{{ user `MACHINE_TYPE`          }}",
      "source_image_family":  "{{ user `IMAGE_FAMILY`          }}",
      "project_id":           "{{ user `GCP_PROJECT`           }}",
      "zone":                 "{{ user `ZONE`                  }}",
      "subnetwork":           "{{ user `SUBNETWORK`            }}",
      "tags":               [ "{{ user `NET_TAGS`              }}",
                              "packer-winrm"                     ],
      "disk_size":            "{{ user `DISK_SIZE`             }}",
      "winrm_username":       "{{ user `USER_NAME`             }}",

      "image_name":           "{{ user `PURPOSE_LABEL` }}-{{ isotime | clean_resource_name }}",
      "image_labels":  {
        "source-bucket":      "{{ user `BUCKET_NAME`   }}",
        "source-folder":      "{{ user `FOLDER_NAME`   }}",
        "purpose":            "{{ user `PURPOSE_LABEL` }}",
        "image-family":       "{{ user `IMAGE_FAMILY`  }}",
        "issued":             "{{ isotime | clean_resource_name }}"
      },

      "winrm_insecure":        true,
      "omit_external_ip":      true,
      "use_internal_ip":       true,
      "preemptible":          "{{ user `PREEMPTIBILITY` }}",

      "winrm_use_ssl":        "{{ user `USE_SSL`     }}",

      "metadata": {
        "windows-startup-script-cmd": "winrm quickconfig -quiet & net user /add {{ user `USER_NAME` }}  & net localgroup administrators {{ user `USER_NAME` }} /add & winrm set winrm/config/service/auth @{Basic=\"true\"} {{ user `DEBUG_INIT_SCRIPT` }}"
      }

    }
  ],






  "provisioners": [

    { "type":        "shell-local",
      "command":     "echo 'WinPass: {{.WinRMPassword}}' | tee /tmp/winrmIp.txt # for debug. just save" },




    { "type":        "powershell",
      "inline": [
                     "gsutil -m rsync -r gs://{{ user `BUCKET_NAME` }}/{{ user `FOLDER_NAME` }}/ .\\Downloads" ] },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-Java.ps1" },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-Maven.ps1" },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-GitDSC.ps1" },


    { "type":        "powershell",
      "inline": [    "## Folder for installer, maven, etc logs and stuffs",
                     "New-Item -ItemType Directory -Path {{ user `CACHE_FOLDER` }}" ] },


    { "type":        "file",
      "source":      "scafold/",
      "destination": ".\\" },


    { "type":        "powershell",
      "inline": [
        "## Fix for same packge issue",
        "New-Item -ItemType Directory -Path .\\.m2\\repository\\com\\google\\rfc2445\\" ] },

    { "type":        "file",
      "source":      "maven-fix/rfc2445/",
      "destination": ".\\.m2\\repository\\com\\google\\rfc2445\\" },

    { "type":        "file",
      "source":      "maven-credentials/",
      "destination": ".\\.m2" },


    { "type":        "powershell",
      "inline": [    "# Create .ssh folder",
                     "New-Item -ItemType Directory -Path .\\.ssh" ] },


    { "type":        "file",
      "source":      "credentials/",
      "destination": ".\\.ssh" },

    { "type":        "powershell",
      "inline": [
        "& 'C:\\Program Files\\Git\\bin\\bash.exe' -c 'ssh-keyscan -t rsa github.com | tee .ssh/known_hosts' ",
        "& git clone {{ user `NIMBUS_REPO` }} # we clone current 'master'" ] },

    { "type":        "powershell",
      "inline": [    "# https://willhaley.com/blog/script-install-cygwin-windows/" ] },


    { "type":        "powershell",
      "valid_exit_codes": [ 0, 1 ],
      "inline": [
        "Set-Location -Path  .\\nimbus",
        "${env:MAVEN_OPTS}  = \"-ea -Xss1536k -Xmx8g\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.base/java.io=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.base/java.lang.reflect=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.base/java.lang=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.base/java.net=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.base/java.util.concurrent=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.base/java.util=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.base/sun.net=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.management/java.lang.management=ALL-UNNAMED\"",
        "${env:MAVEN_OPTS} += \" --add-opens=java.management/sun.management=ALL-UNNAMED\"",
        "echo \"MAVEN_OPTS=${env:MAVEN_OPTS}\"",
        "mvn -T 1C --batch-mode clean install -DskipTests | Tee-Object {{ user `CACHE_FOLDER` }}\\mvn-first-install.log" ] },


    { "type":        "shell-local",
      "inline": [    "rm -vrf   {{ user `LOCAL_TMP_CACHE` }}",
                     "mkdir -vp {{ user `LOCAL_TMP_CACHE` }}" ] },

    { "type":        "file",
      "direction":   "download",
      "source":      "{{ user `CACHE_FOLDER` }}",
      "destination": "{{ user `LOCAL_TMP_CACHE` }}/" },


    { "type":        "breakpoint",
      "disable":      false,
      "note":        "this is a breakpoint after mvn command" },



    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-NotepadPlusPlusDSC.ps1" },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-ChromeDSC.ps1" },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-VimDSC.ps1" },

    { "type":        "powershell",
      "skip_clean":   false,
      "inline": [    "## just copy gmake.exe",
                     "Copy-Item \".\\Downloads\\gmake.exe\" -Destination ${env:WinDir}\\System32" ] },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-Cygwin.ps1" },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-Wget.ps1" },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-TimeThis.ps1" },

    { "type":        "powershell",
      "skip_clean":   false,
      "script":      "scripts/Install-WinSCP.ps1" },


    { "type":        "powershell",
      "inline": [    "# storing useful utilities like rsync.exe",
                     "New-Item  -Path \"C:\\\" -Name \"Bin\" -ItemType \"directory\"",
                     "Move-Item -Path \".\\Downloads\\cwrsync_6.2.1_x64_free\\\" -Destination \"C:\\Bin\\\"" ] },


    { "type":        "powershell",
      "skip_clean":   false,
      "inline": [    "powershell Install-WindowsFeature -Name NFS-Client" ] },


    { "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\"" },


    { "type":        "windows-shell",
      "inline": [
        "powershell New-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\ClientForNFS\\CurrentVersion\\Default\" -Name \"AnonymousUid\" -Value \"-2\" -PropertyType DWORD",
        "powershell New-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\ClientForNFS\\CurrentVersion\\Default\" -Name \"AnonymousGid\" -Value  \"0\" -PropertyType DWORD",
        "@rem nfsadmin client stop",
        "@rem nfsadmin client start" ] },

    { "type":        "powershell",
      "skip_clean":   false,
      "inline": [    "GCESysprep -NoShutdown" ] },


    { "type": "breakpoint",
      "disable": true,
      "note": "this is a final breakpoint" },

    { "type": "powershell",
      "inline": [
        "# Read-Host -Prompt \"Press any key to continue\" ## to debug" ] }
	
  ],





  "post-processors": [

    { "type":        "manifest",
      "custom_data": {
        "key":       "my-value" } },

    { "type":        "shell-local",
      "inline": [
        "NAME=$( cat packer-manifest.json | jq -r  '.builds | sort_by(.build_time)[-1] | .artifact_id' )",
        "echo 'Winrmpass={{ build `Password` }}'",
        "mkdir -vp results/${NAME}",
        "echo '{{.WinRMPassword}}' ",
        "echo '{{.WinRMPassword}}' > results/${NAME}/password.pure",
        "cat packer-manifest.json | jq -r  '.builds | sort_by(.build_time)[-1]' > results/${NAME}/manifest.json",
        "cp -iar {{ user `LOCAL_TMP_CACHE` }} results/${NAME}",
        "gcloud compute images describe ${NAME}" ] }

  ]
}
